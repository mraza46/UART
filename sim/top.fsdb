$date
	Thu Jun 13 03:09:31 2024
$end

$version
	Synopsys VCS version U-2023.03-SP1_Full64
$end

$timescale
	1s
$end

$comment Csum: 1 6cfe5b62f58faf74 $end


$scope module tb_top $end
$var reg 1 ! clk $end
$var reg 1 " rst $end

$scope begin unnamed$$_vcs_4 $end
$upscope $end


$scope begin unnamed$$_vcs_0 $end
$upscope $end


$scope begin unnamed$$_vcs_1 $end
$upscope $end


$scope begin unnamed$$_vcs_2 $end
$upscope $end


$scope begin unnamed$$_vcs_3 $end
$upscope $end


$scope module uif $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var reg 1 % rcv_bit $end
$var reg 1 & xmt_bit $end
$upscope $end


$scope module DUT $end
$var wire 1 ' wr_fifo $end
$var wire 8 ( wr_fifo_data [7:0] $end
$var wire 1 ) rd_rcv_data $end
$var wire 8 * c_data [7:0] $end
$var wire 8 + wr_mem_data [7:0] $end
$var wire 1 , full $end
$var wire 1 - empty $end
$var wire 1 . xf_full $end
$var wire 1 / xf_empty $end
$var wire 1 0 wr_mem $end
$var wire 1 1 rd_mem $end
$var wire 1 2 rd_rcv_fifo $end
$var wire 1 3 wr_xmt_fifo $end
$var wire 4 4 addr [3:0] $end
$var wire 8 5 rd_mem_data [7:0] $end
$var wire 8 6 rd_fifo_data [7:0] $end
$var wire 1 7 load_ps $end
$var wire 1 8 wr_cmd $end
$var wire 1 9 sr_ready $end

$scope module dsr $end
$var wire 1 % rcv_bit $end
$var wire 1 $ rst $end
$var wire 1 # clk $end
$var reg 1 ' wr_fifo $end
$var reg 8 ( wr_fifo_data [7:0] $end
$var reg 4 : count [3:0] $end
$upscope $end


$scope module rcv $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var wire 1 ' wr_fifo $end
$var wire 8 ( wr_fifo_data [7:0] $end
$var wire 1 2 rd_rcv_fifo $end
$var reg 1 , full $end
$var reg 1 - empty $end
$var reg 8 + wr_mem_data [7:0] $end
$var reg 1 8 wr_cmd $end
$var reg 3 ; wr_ptr [2:0] $end
$var reg 3 < rd_ptr [2:0] $end
$upscope $end


$scope module cl $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var wire 1 8 wr_cmd $end
$var wire 1 ' wr_fifo $end
$var wire 8 + wr_mem_data [7:0] $end
$var wire 1 , full $end
$var wire 1 - empty $end
$var wire 1 . xf_full $end
$var wire 1 / xf_empty $end
$var wire 1 9 sr_ready $end
$var reg 1 1 rd_mem $end
$var reg 1 0 wr_mem $end
$var reg 4 4 addr [3:0] $end
$var reg 1 3 wr_xmt_fifo $end
$var reg 1 2 rd_rcv_fifo $end
$var reg 1 7 load_ps $end
$var reg 3 = data_out [2:0] $end
$var reg 3 > val [2:0] $end
$var reg 2 ? state [1:0] $end
$upscope $end


$scope module mem $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var wire 4 4 addr [3:0] $end
$var wire 8 + wr_mem_data [7:0] $end
$var wire 1 0 wr_mem $end
$var wire 1 1 rd_mem $end
$var reg 8 5 rd_mem_data [7:0] $end

$scope begin unnamed$$_0 $end
$upscope $end

$upscope $end


$scope module tx $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var wire 1 3 wr_xmt_fifo $end
$var wire 8 5 rd_mem_data [7:0] $end
$var wire 1 7 load_ps $end
$var reg 8 6 rd_fifo_data [7:0] $end
$var reg 1 . xf_full $end
$var reg 1 / xf_empty $end
$var reg 3 @ wr_ptr [2:0] $end
$var reg 3 A rd_ptr [2:0] $end
$upscope $end


$scope module sr $end
$var wire 8 6 rd_fifo_data [7:0] $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var wire 1 7 load_ps $end
$var reg 1 9 sr_ready $end
$var reg 1 & xmt_bit $end
$var reg 4 B count [3:0] $end
$var reg 8 C temp [7:0] $end
$var reg 1 D count_en $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
07
01
02
00
03
0D
0'
1-
0,
08
19
1/
0.
0!
1"
b0000 4
b0000 :
b000 =
b00000000 (
b00000000 5
bxxxxxxxx +
b000 <
b0000 B
b00 ?
b00000000 C
bxxxxxxxx 6
b000 A
b000 @
b000 >
b000 ;
bzzzzzzzz *
z)
0#
1$
1%
0&
$end
#5
1!
1#
#10
0!
0#
#15
1!
1#
#20
0!
0#
#25
0"
0$
1!
1#
b00000001 (
b0001 :
bxxxx 4
bxxx =
#30
0!
0#
#35
1!
1#
b00000011 (
b0010 :
#40
0!
0#
#45
1!
1#
0%
b00000111 (
b0011 :
#50
0!
0#
#55
1!
1#
b00001110 (
b0100 :
#60
0!
0#
#65
1!
1#
b00011100 (
b0101 :
#70
0!
0#
#75
1!
1#
b00111000 (
b0110 :
#80
0!
0#
#85
1!
1#
1%
b01110000 (
b0111 :
#90
0!
0#
#95
1!
1#
0%
b11100001 (
b1000 :
#100
0!
0#
#105
1!
1#
b11000010 (
1'
b0001 :
1%
#110
0!
0#
#115
1!
1#
0%
b001 ;
b10000101 (
0'
b0010 :
12
18
0-
b11000010 +
#120
0!
0#
#125
1!
1#
b001 <
b00001010 (
b0011 :
02
b10 ?
b0001 4
b110 =
08
bxxxxxxxx +
#130
0!
0#
#135
1!
1#
1%
b00010100 (
b0100 :
#140
0!
0#
#145
1!
1#
b00101001 (
b0101 :
#150
0!
0#
#155
1!
1#
b01010011 (
b0110 :
#160
0!
0#
#165
1!
1#
0%
b10100111 (
b0111 :
#170
0!
0#
#175
1!
1#
1%
b01001110 (
b1000 :
#180
0!
0#
#185
1!
1#
b10011101 (
1'
b0001 :
0%
#190
0!
0#
#195
1!
1#
b010 ;
b00111010 (
0'
b0010 :
12
18
b10011101 +
#200
0!
0#
#205
1!
1#
1%
b010 <
b01110100 (
b0011 :
10
02
b001 >
08
bxxxxxxxx +
#210
0!
0#
#215
1!
1#
b11101001 (
b0100 :
00
b0010 4
#220
0!
0#
#225
1!
1#
0%
b11010011 (
b0101 :
#230
0!
0#
#235
1!
1#
b10100110 (
b0110 :
#240
0!
0#
#245
1!
1#
b01001100 (
b0111 :
#250
0!
0#
#255
1!
1#
1%
b10011000 (
b1000 :
#260
0!
0#
#265
1!
1#
b00110001 (
1'
b0001 :
#270
0!
0#
#275
1!
1#
0%
b011 ;
b01100011 (
0'
b0010 :
12
18
b00110001 +
#280
0!
0#
#285
1!
1#
b011 <
b11000110 (
b0011 :
10
02
b010 >
08
bxxxxxxxx +
#290
0!
0#
#295
1!
1#
1%
b10001100 (
b0100 :
00
b0011 4
#300
0!
0#
#305
1!
1#
b00011001 (
b0101 :
#310
0!
0#
#315
1!
1#
b00110011 (
b0110 :
#320
0!
0#
#325
1!
1#
b01100111 (
b0111 :
#330
0!
0#
#335
1!
1#
0%
b11001111 (
b1000 :
#340
0!
0#
#345
1!
1#
b10011110 (
1'
b0001 :
1%
#350
0!
0#
#355
1!
1#
0%
b100 ;
b00111101 (
0'
b0010 :
12
18
b10011110 +
#360
0!
0#
#365
1!
1#
1%
b100 <
b01111010 (
b0011 :
10
02
b011 >
08
bxxxxxxxx +
#370
0!
0#
#375
1!
1#
0%
b11110101 (
b0100 :
00
b0100 4
#380
0!
0#
#385
1!
1#
b11101010 (
b0101 :
#390
0!
0#
#395
1!
1#
1%
b11010100 (
b0110 :
#400
0!
0#
#405
1!
1#
0%
b10101001 (
b0111 :
#410
0!
0#
#415
1!
1#
1%
b01010010 (
b1000 :
#420
0!
0#
#425
1!
1#
b10100101 (
1'
b0001 :
#430
0!
0#
#435
1!
1#
0%
b101 ;
b01001011 (
0'
b0010 :
12
18
b10100101 +
#440
0!
0#
#445
1!
1#
b101 <
b10010110 (
b0011 :
10
02
b100 >
08
bxxxxxxxx +
#450
0!
0#
#455
1!
1#
b00101100 (
b0100 :
00
b0101 4
#460
0!
0#
#465
1!
1#
1%
b01011000 (
b0101 :
#470
0!
0#
#475
1!
1#
b10110001 (
b0110 :
#480
0!
0#
#485
1!
1#
0%
b01100011 (
b0111 :
#490
0!
0#
#495
1!
1#
1%
b11000110 (
b1000 :
#500
0!
0#
#505
1!
1#
b10001101 (
1'
b0001 :
#510
0!
0#
#515
1!
1#
0%
b110 ;
b00011011 (
0'
b0010 :
12
18
b10001101 +
#520
0!
0#
#525
1!
1#
b110 <
b00110110 (
b0011 :
10
02
b101 >
08
bxxxxxxxx +
#530
0!
0#
#535
1!
1#
1%
b01101100 (
b0100 :
00
b0110 4
#540
0!
0#
#545
1!
1#
0%
b11011001 (
b0101 :
#550
0!
0#
#555
1!
1#
b10110010 (
b0110 :
#560
0!
0#
#565
1!
1#
b01100100 (
b0111 :
#570
0!
0#
#575
1!
1#
b11001000 (
b1000 :
#580
0!
0#
#585
1!
1#
b10010000 (
1'
b0001 :
#590
0!
0#
#595
1!
1#
1%
b111 ;
b00100000 (
0'
b0010 :
12
18
b10010000 +
1,
#600
0!
0#
#605
1!
1#
0%
b111 <
b01000001 (
b0011 :
10
02
b110 >
08
bxxxxxxxx +
#610
0!
0#
#615
1!
1#
b10000010 (
b0100 :
00
b0111 4
#620
0!
0#
#625
1!
1#
1%
b00000100 (
b0101 :
#630
0!
0#
#635
1!
1#
0%
b00001001 (
b0110 :
#640
0!
0#
#645
1!
1#
1%
b00010010 (
b0111 :
#650
0!
0#
#655
1!
1#
b00100101 (
b1000 :
#660
0!
0#
#665
1!
1#
b01001011 (
1'
b0001 :
0%
#670
0!
0#
#675
1!
1#
1%
b000 ;
b10010110 (
0'
b0010 :
12
b00 ?
18
b01001011 +
0,
1-
#680
0!
0#
#685
1!
1#
b00101101 (
b0011 :
02
b000 >
b01 ?
b0101 4
b010 =
08
#690
0!
0#
#695
1!
1#
0%
b01011011 (
b0100 :
11
13
#700
0!
0#
#705
1!
1#
b001 @
b10110110 (
b0101 :
bxxxxxxxx 5
0/
17
b00000000 6
#710
0!
0#
#715
1!
1#
b010 @
b001 A
b01101100 (
b0110 :
07
1D
09
#720
0!
0#
#725
1!
1#
1%
b011 @
b11011000 (
b0111 :
b0001 B
#730
0!
0#
#735
1!
1#
b100 @
b10110001 (
b1000 :
b0010 B
#740
0!
0#
#745
1!
1#
b101 @
b01100011 (
1'
b0001 :
b0011 B
#750
0!
0#
#755
1!
1#
0%
b001 ;
b110 @
b11000111 (
0'
b0010 :
12
b0100 B
18
0-
#760
0!
0#
#765
1!
1#
b000 <
b111 @
b10001110 (
b0011 :
02
b0110 4
b001 >
b0101 B
08
b01100011 +
1.
#770
0!
0#
#775
1!
1#
1%
b000 @
b00011100 (
b0100 :
b0111 4
b010 >
b0110 B
0.
1/
#780
0!
0#
#785
1!
1#
b001 @
b00111001 (
b0101 :
01
03
b0111 B
b00000000 5
0/
#790
0!
0#
#795
1!
1#
0%
b000 @
b000 A
b01110011 (
b0110 :
b1000 B
1/
#800
0!
0#
#805
1!
1#
1%
b11100110 (
b0111 :
b0000 B
19
0D
#810
0!
0#
#815
1!
1#
0%
b11001101 (
b1000 :
#820
0!
0#
#825
1!
1#
b10011010 (
1'
b0001 :
#830
0!
0#
#835
1!
1#
b010 ;
b00110100 (
0'
b0010 :
12
b00 ?
18
